{"Config reference: ": "world_cover", "_timestamp": 1681327521.5503128, "_runtime": 396.956081867218, "_step": 5063, "Dataset size": 6400, "Run description": "world cover only", "model details": "ResNet(\n  (conv1): Conv2d(1, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (relu): ReLU(inplace=True)\n  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n  (layer1): Sequential(\n    (0): BasicBlock(\n      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n    (1): BasicBlock(\n      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n  )\n  (layer2): Sequential(\n    (0): BasicBlock(\n      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (downsample): Sequential(\n        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): BasicBlock(\n      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n  )\n  (layer3): Sequential(\n    (0): BasicBlock(\n      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (downsample): Sequential(\n        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): BasicBlock(\n      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n  )\n  (layer4): Sequential(\n    (0): BasicBlock(\n      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (downsample): Sequential(\n        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): BasicBlock(\n      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n  )\n  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n  (fc): Sequential(\n    (0): Linear(in_features=512, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Dropout(p=0.2, inplace=False)\n    (3): Linear(in_features=256, out_features=11, bias=True)\n  )\n)", "Step loss": 0.14557471871376038, "Accuracy class training 0": 0.9190624952316284, "Accuracy class training 1": 0.9276562333106995, "Accuracy class training 2": 0.8431249856948853, "Accuracy class training 3": 0.8307812213897705, "Accuracy class training 4": 0.9128124713897705, "Accuracy class training 5": 0.95765620470047, "Accuracy class training 6": 1.0, "Accuracy class training 7": 0.922656238079071, "Accuracy class training 8": 0.9404687285423279, "Accuracy class training 9": 1.0, "Accuracy class training 10": 0.9985937476158142, "F1 class training 0": 0.9454128742218018, "F1 class training 1": 0.6703827381134033, "F1 class training 2": 0.8912397027015686, "F1 class training 3": 0.731781542301178, "F1 class training 4": 0.5467603206634521, "F1 class training 5": 0.016166668385267258, "F1 class training 6": 0.0, "F1 class training 7": 0.8291868567466736, "F1 class training 8": 0.5581110119819641, "F1 class training 9": 0.0, "F1 class training 10": 0.0, "Epoch train loss": 0.1599688082933426, "Epoch train accuracy": 0.9320736527442932, "Epoch train precision": 0.8627118468284607, "Epoch train recall": 0.8239436149597168, "Epoch train f1 score": 0.8423667550086975, "Accuracy class validation 0": 0.8974999785423279, "Accuracy class validation 1": 0.9337499737739563, "Accuracy class validation 2": 0.8449999690055847, "Accuracy class validation 3": 0.8362500071525574, "Accuracy class validation 4": 0.9087499976158142, "Accuracy class validation 5": 0.9549999833106995, "Accuracy class validation 6": 0.9987499713897705, "Accuracy class validation 7": 0.9137499928474426, "Accuracy class validation 8": 0.9337499737739563, "Accuracy class validation 9": 1.0, "Accuracy class validation 10": 0.9975000023841858, "F1 class validation 0": 0.930242657661438, "F1 class validation 1": 0.7377814054489136, "F1 class validation 2": 0.896824836730957, "F1 class validation 3": 0.7200012803077698, "F1 class validation 4": 0.5685714483261108, "F1 class validation 5": 0.0, "F1 class validation 6": 0.0, "F1 class validation 7": 0.8061286807060242, "F1 class validation 8": 0.4999047815799713, "F1 class validation 9": 0.0, "F1 class validation 10": 0.0, "Epoch val accuracy": 0.9290908575057983, "Epoch val precision": 0.8559066653251648, "Epoch val recall": 0.8216933012008667, "Epoch val f1 score": 0.8380258679389954, "_wandb": {"runtime": 396}}