{"Run description": "test", "_timestamp": 1682945512.4401376, "_runtime": 263.330938577652, "_step": 7990, "model details": "ResNet(\n  (res_net_1): ResNet(\n    (conv1): Conv2d(4, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (relu): ReLU(inplace=True)\n    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n    (layer1): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (layer2): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample): Sequential(\n          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (layer3): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample): Sequential(\n          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (layer4): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample): Sequential(\n          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n    (fc): Sequential(\n      (0): Linear(in_features=512, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Dropout(p=0.2, inplace=False)\n      (3): Linear(in_features=256, out_features=11, bias=True)\n    )\n  )\n)", "Notes": "Modalities: [10] with data set train size: 93171", "Step loss": 0.11799268424510956, "Accuracy class training 0": 0.8085601925849915, "Accuracy class training 1": 0.9929792284965515, "Accuracy class training 2": 0.827346682548523, "Accuracy class training 3": 0.8710172772407532, "Accuracy class training 4": 0.9914225935935974, "Accuracy class training 5": 0.9993773698806763, "Accuracy class training 6": 1.0, "Accuracy class training 7": 0.9683957099914551, "Accuracy class training 8": 0.996876060962677, "Accuracy class training 9": 1.0, "Accuracy class training 10": 0.9999570250511169, "F1 class training 0": 0.7959275245666504, "F1 class training 1": 0.0, "F1 class training 2": 0.3656155467033386, "F1 class training 3": 0.11967568099498749, "F1 class training 4": 0.0, "F1 class training 5": 0.0, "F1 class training 6": 0.0, "F1 class training 7": 0.8966686129570007, "F1 class training 8": 0.0, "F1 class training 9": 0.0, "F1 class training 10": 0.0, "Epoch train loss": 0.11310406774282455, "Epoch train accuracy": 0.9505383968353271, "Epoch train precision": 0.8031851649284363, "Epoch train recall": 0.6061383485794067, "Epoch train f1 score": 0.6886083483695984, "Learning-rate": 0.0009755282581475768, "Accuracy class validation 0": 0.8415117263793945, "Accuracy class validation 1": 0.9931990504264832, "Accuracy class validation 2": 0.8398760557174683, "Accuracy class validation 3": 0.8879132270812988, "Accuracy class validation 4": 0.9906163811683655, "Accuracy class validation 5": 0.9990530610084534, "Accuracy class validation 6": 1.0, "Accuracy class validation 7": 0.9804580211639404, "Accuracy class validation 8": 0.9967286586761475, "Accuracy class validation 9": 1.0, "Accuracy class validation 10": 1.0, "F1 class validation 0": 0.8191704750061035, "F1 class validation 1": 0.0, "F1 class validation 2": 0.45831799507141113, "F1 class validation 3": 0.47484734654426575, "F1 class validation 4": 0.0, "F1 class validation 5": 0.0, "F1 class validation 6": 0.0, "F1 class validation 7": 0.9346364736557007, "F1 class validation 8": 0.0, "F1 class validation 9": 0.0, "F1 class validation 10": 0.0, "Epoch val accuracy": 0.9572137594223022, "Epoch val precision": 0.823731005191803, "Epoch val recall": 0.673984169960022, "Epoch val f1 score": 0.7398340702056885, "_wandb": {"runtime": 262}}