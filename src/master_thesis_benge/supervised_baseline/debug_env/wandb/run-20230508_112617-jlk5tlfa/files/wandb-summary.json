{"Run description": "test", "_timestamp": 1683538268.882992, "_runtime": 291.2758729457855, "_step": 256, "model details": "ResNet(\n  (res_net_1): ResNet(\n    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (relu): ReLU(inplace=True)\n    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n    (layer1): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (layer2): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample): Sequential(\n          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (layer3): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample): Sequential(\n          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (layer4): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample): Sequential(\n          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n    (fc): Sequential(\n      (0): Linear(in_features=512, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Dropout(p=0.2, inplace=False)\n      (3): Linear(in_features=256, out_features=11, bias=True)\n    )\n  )\n)", "Notes": "Modalities: ['sentinel_2'] with data set train size: 6400", "Step loss": 0.29582454549726706, "Accuracy class training 0": 0.7440624833106995, "Accuracy class training 1": 0.8587499856948853, "Accuracy class training 2": 0.7189062237739563, "Accuracy class training 3": 0.653124988079071, "Accuracy class training 4": 0.8660937547683716, "Accuracy class training 5": 0.9565625190734863, "Accuracy class training 6": 0.9950000047683716, "Accuracy class training 7": 0.7793750166893005, "Accuracy class training 8": 0.9090625047683716, "Accuracy class training 9": 0.9978125095367432, "Accuracy class training 10": 0.9939062595367432, "F1 class training 0": 0.85015469789505, "F1 class training 1": 0.0005882352706976235, "F1 class training 2": 0.8214922547340393, "F1 class training 3": 0.18744175136089325, "F1 class training 4": 0.007725490257143974, "F1 class training 5": 0.0, "F1 class training 6": 0.0, "F1 class training 7": 0.2321634441614151, "F1 class training 8": 0.022833332419395447, "F1 class training 9": 0.0, "F1 class training 10": 0.0, "Epoch train loss": 0.3302356816644291, "Epoch train accuracy": 0.8611504435539246, "Epoch train precision": 0.7200077176094055, "Epoch train recall": 0.6171063780784607, "Epoch train f1 score": 0.6628943681716919, "Learning-rate": 0.0009938441702975688, "Accuracy class validation 0": 0.7537500262260437, "Accuracy class validation 1": 0.8675000071525574, "Accuracy class validation 2": 0.7875000238418579, "Accuracy class validation 3": 0.6875, "Accuracy class validation 4": 0.862500011920929, "Accuracy class validation 5": 0.9549999833106995, "Accuracy class validation 6": 0.9987499713897705, "Accuracy class validation 7": 0.8362500071525574, "Accuracy class validation 8": 0.9049999713897705, "Accuracy class validation 9": 1.0, "Accuracy class validation 10": 0.9975000023841858, "F1 class validation 0": 0.8539822101593018, "F1 class validation 1": 0.0, "F1 class validation 2": 0.8601924777030945, "F1 class validation 3": 0.5516526103019714, "F1 class validation 4": 0.0, "F1 class validation 5": 0.0, "F1 class validation 6": 0.0, "F1 class validation 7": 0.5226127505302429, "F1 class validation 8": 0.12228571623563766, "F1 class validation 9": 0.0, "F1 class validation 10": 0.0, "Epoch val accuracy": 0.8773861527442932, "Epoch val precision": 0.7370518445968628, "Epoch val recall": 0.6980007290840149, "Epoch val f1 score": 0.71649169921875, "_wandb": {"runtime": 289}}